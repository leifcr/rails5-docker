#!/bin/bash

function is_passenger_installed() {
  [ ! -f Gemfile.lock ] && return 1
  grep ' passenger ' Gemfile.lock >/dev/null
}

function is_puma_installed() {
  [ ! -f Gemfile.lock ] && return 1
  grep ' puma ' Gemfile.lock >/dev/null
}

function is_foreman_installed() {
  [ ! -f Gemfile.lock ] && return 1
  [ ! -f Procfile ] && return 1
  grep ' foreman ' Gemfile.lock >/dev/null
}

set -e

source /usr/local/bin/s2i/nss_wrapper_src

# function check_number() {
#   if [[ ! "$2" =~ ^[0-9]+$ ]]; then
#     echo "$1 needs to be a non-negative number"
#     exit 1
#   fi
# }

# Migrate or setup db

set +e
echo
echo "== Migrating database"
echo
bundle exec rails db:migrate

if [[ $? != 0 ]]; then
  echo
  echo "== Failed to migrate. Running setup first."
  echo
  set -e
  bundle exec rails db:create && bundle exec rails db:migrate
fi

# export RACK_ENV=${RACK_ENV:-"production"}
# export_vars=$(cgroup-limits) ; export $export_vars

# if is_foreman_installed; then
#   exec bundle exec foreman
# elif is_passenger_installed; then
#   echo bundle exec passenger --port 8080
# # elif is_puma_installed; then
#   # echo bundle exec puma --port 8080
# else
#   echo 'No foreman, no puma and no passenger... nothing to do'
# fi

if is_foreman_installed; then
  echo "------ Starting foreman ------"
  echo whoami: $(whoami)
  echo id: $(id)
  exec bundle exec foreman start
elif is_passenger_installed; then
  # Fetch the user id from docker run so that we can substitute it in
  echo "------ Starting passenger (without foreman) ------"
  echo whoami: $(whoami)
  echo id: $(id)
  exec bundle exec passenger start --port 8080
else
  echo 'No passenger or foreman... nothing to do'
fi
